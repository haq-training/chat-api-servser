extend type Query {
    me: User!

    login(input: UserLoginInput!): UserLoginResponse!
}

extend type Mutation {
    register(input: CreateUserInput!): User!
}


extend type Subscription {
    onlineTracker(userId: Int!): UserOnline!
}


type User {
    id: Int!
    email: String!
    firstName: String!
    lastName: String!
    avatarUrl: String
    status: Boolean
    location: String
    story: String
    role: Int!
    createdAt: Date
    updatedAt: Date
}

input CreateUserInput {
    email: String!
    password: String!
    firstName: String!
    lastName: String!
    role: Int!
    location: String
    story: String
    avatarUrl: Upload
}

input UserLoginInput {
    account: String!
    password: String!
}

type UserLoginResponse {
    token: String!
    user: User!
}

type UserOnline {
    id: Int
    body: String
}